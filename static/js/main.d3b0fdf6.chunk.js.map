{"version":3,"sources":["HeaderBar.js","ToDo.js","ToDoForm.js","App.js","index.js"],"names":["HeaderBar","searchItems","resetSearch","resetIntoFalseSearch","textInput","useRef","useEffect","current","value","classes","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","useStyles","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","onChange","placeholder","root","input","inputProps","inputRef","style","Transition","React","forwardRef","props","ref","Slide","direction","ToDo","todo","toggleTask","removeTask","editTask","useState","open","setOpen","task","headerInput","setHeaderInput","bodyInput","setBodyInput","handleClose","RenderCompleteButton","complete","IconButton","onClick","e","stopPropagation","id","RemoveCircleOutline","Done","DeleteForever","preventDefault","Dialog","TransitionComponent","onClose","DialogContent","onSubmit","trim","userInput","type","target","TextareaAutosize","Cancel","Save","ToDoForm","addTask","toggleForm","a","currentTarget","App","JSON","parse","localStorage","getItem","todos","setTodos","searchedTodos","setSearchedTodos","isTapped","setTapped","setResetSearch","newItem","Math","random","toString","substr","setItem","stringify","newTodos","map","filteredTodos","filter","handleToggle","newSearchedTodos","Creation","Button","event","stringToSearch","includes","list","setList","animation","preventOnFilter","onEnd","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAoHeA,MA7Gf,YAAwE,IAAnDC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,qBACzCC,EAAYC,iBAAO,MAEvBC,qBAAU,WACLJ,IACDE,EAAUG,QAAQC,MAAQ,GAC1BL,QAIJ,IAgEMM,EAhEYC,aAAW,SAACC,GAAD,YAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,OAAK,GACHC,QAAS,QADN,cAEFP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAHR,2BAKS,QALT,GAOLG,OAAO,aACLC,SAAU,WACVC,aAAcZ,EAAMa,MAAMD,aAC1BE,gBAAiBC,YAAMf,EAAMgB,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACTJ,gBAAiBC,YAAMf,EAAMgB,QAAQC,OAAOC,MAAO,MAErDd,YAAaJ,EAAMK,QAAQ,GAC3Bc,WAAY,EACZC,MAAO,QACNpB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BU,WAAYnB,EAAMK,QAAQ,GAC1Be,MAAO,SAGXC,WAAY,CACVC,QAAStB,EAAMK,QAAQ,EAAG,GAC1BkB,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACfjB,QAAS,OACTkB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,WAETC,WAAW,aACTP,QAAStB,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAChCyB,YAAY,cAAD,OAAgB9B,EAAMK,QAAQ,GAA9B,OACX0B,WAAY/B,EAAMgC,YAAYC,OAAO,SACrCb,MAAO,QACNpB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BW,MAAO,SAGXc,eAAe,aACb3B,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGb4B,cAAc,aACZ5B,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,YAKC6B,GAEhB,OACE,qBAAKC,UAAWvC,EAAQG,KAAxB,SACE,cAACqC,EAAA,EAAD,CACE3B,SAAS,SACT0B,UAAU,UAFZ,SAIE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYH,UAAWvC,EAAQQ,MAAOmC,QAAQ,KAAKC,QAAM,EAAzD,2BAGA,sBAAKL,UAAWvC,EAAQY,OAAxB,UACE,qBAAK2B,UAAWvC,EAAQuB,WAAxB,SACE,cAAC,IAAD,MAEF,cAACsB,EAAA,EAAD,CACEC,SAAUtD,EACVuD,YAAY,iCACZ/C,QAAS,CACPgD,KAAMhD,EAAQ6B,UACdoB,MAAOjD,EAAQ+B,YAEjBmB,WAAY,CAAE,aAAc,UAC5BC,SAAUxD,OAGd,qBAAK4C,UAAWvC,EAAQG,OACxB,qBAAKiD,MAAO,CAACtB,MAAO,WAApB,kG,0FCzGJuB,EAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC7D,OAAO,cAACC,EAAA,EAAD,aAAOC,UAAU,OAAOF,IAAKA,GAASD,OAgIhCI,MA7Hf,YAA2D,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SAC5C,EAAwBV,IAAMW,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCF,mBAASJ,EAAKO,KAAKC,aAAzD,mBAAOA,EAAP,KAAoBC,EAApB,KACA,EAAkCL,mBAASJ,EAAKO,KAAKG,WAArD,mBAAOA,EAAP,KAAkBC,EAAlB,KAcMC,EAAc,WAClBN,GAAQ,IAGJO,EAAuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9B,OACE,cAACC,EAAA,EAAD,CACErC,UACEsB,EAAKc,SACL,2DACA,yDAEFE,QAAS,SAACC,GACRA,EAAEC,kBACFjB,EAAWD,EAAKmB,KARpB,SAWCL,EACC,cAACM,EAAA,EAAD,CAAqB1C,UAAU,oBAE/B,cAAC2C,EAAA,EAAD,CAAM3C,UAAU,uBAetB,OACE,gCACE,sBACEA,UAAWsB,EAAKc,SAAW,gCAAkC,YAC7DE,QA3CkB,WACtBV,GAAQ,IAwCN,UAIE,qBAAK5B,UAAU,oBAAf,SACGsB,EAAKO,KAAKC,cAEb,qBAAK9B,UAAU,kBAAf,SACGsB,EAAKO,KAAKG,YAEb,sBAAKhC,UAAU,mBAAf,UACE,cAACqC,EAAA,EAAD,CACErC,UAAU,oBACVsC,QAAS,kBAAMd,EAAWF,EAAKmB,KAFjC,SAIE,cAACG,EAAA,EAAD,CAAe5C,UAAU,sBAE3B,cAACmC,EAAD,CAAsBG,QAAS,SAACC,GAAD,OAAOA,EAAEM,kBAAkBT,SAAUd,EAAKc,iBAG7E,cAACU,EAAA,EAAD,CACEnB,KAAMA,EACNoB,oBAAqBjC,EACrBkC,QAASd,EAHX,SAKE,cAACe,EAAA,EAAD,UACE,sBACEC,SAtCW,SAACX,GAEpB,GADAA,EAAEM,iBACwB,KAAvBf,EAAYqB,QAAsC,KAArBnB,EAAUmB,OAAe,CACvD,IAAMC,EAAY,CAACtB,cAAaE,aAChCP,EAASH,EAAKmB,GAAIW,GAClBlB,MAkCMlC,UAAU,cAFZ,SAIE,sBAAKA,UAAU,yBAAf,UACE,cAACM,EAAA,EAAD,CACE9C,MAAOsE,EACPuB,KAAK,OACL9C,SAnFkB,SAACgC,GAC/BR,EAAeQ,EAAEe,OAAO9F,QAmFZgD,YAAY,oGACZR,UAAU,uBAIZ,cAACuD,EAAA,EAAD,CACEvD,UAAU,wBACVO,SAvFgB,SAACgC,GAC7BN,EAAaM,EAAEe,OAAO9F,QAuFVA,MAAOwE,EACPqB,KAAK,OACL7C,YAAY,kDAGd,sBAAKR,UAAU,qBAAf,UACA,cAACqC,EAAA,EAAD,CACEC,QAASJ,EACT9B,QAAQ,YACRiD,KAAK,SAHP,SAIE,cAACG,EAAA,EAAD,CAAQxD,UAAU,0BAGpB,cAACqC,EAAA,EAAD,CACEjC,QAAQ,YACRb,MAAM,UACN8D,KAAK,SAHP,SAIE,cAACI,EAAA,EAAD,sBCnDDC,MAjEf,YAA4C,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAC3B,EAAsClC,mBAAS,IAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAkCL,mBAAS,IAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAoBA,OACE,sBACEiB,SAZiB,SAACX,GACpBA,EAAEM,iBACF,IAAMgB,EAAI,CAAC/B,cAAaE,aACE,KAAvBF,EAAYqB,QAAsC,KAArBnB,EAAUmB,SACxCQ,EAAQE,GACR9B,EAAe,IACfE,EAAa,MAObjC,UAAU,YAFZ,SAIE,sBAAKA,UAAU,uBAAf,UACE,cAACM,EAAA,EAAD,CACE9C,MAAOsE,EACPuB,KAAK,OACL9C,SA3BwB,SAACgC,GAC/BR,EAAeQ,EAAEuB,cAActG,QA2BzBgD,YAAY,oGACZR,UAAU,qBAGZ,cAACuD,EAAA,EAAD,CACEvD,UAAU,sBACVO,SA9BsB,SAACgC,GAC7BN,EAAaM,EAAEuB,cAActG,QA8BvBA,MAAOwE,EACPqB,KAAK,OACL7C,YAAY,kDAGd,sBAAKR,UAAU,mBAAf,UACA,cAACqC,EAAA,EAAD,CACEC,QAASsB,EACTxD,QAAQ,YACRiD,KAAK,SAHP,SAIE,cAACG,EAAA,EAAD,CAAQxD,UAAU,wBAGpB,cAACqC,EAAA,EAAD,CACEjC,QAAQ,YACRb,MAAM,UACN8D,KAAK,SAHP,SAIE,cAACI,EAAA,EAAD,e,QCoFKM,MAxIf,WACE,MAA0BrC,mBAASsC,KAAKC,MAAMC,aAAaC,QAAQ,UAAYH,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,IAA3H,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwC3C,mBAAS0C,GAAgB,IAAjE,mBAAKE,EAAL,KAAoBC,EAApB,KACA,EAA4B7C,oBAAS,GAArC,mBAAK8C,EAAL,KAAeC,EAAf,KACA,EAAoC/C,oBAAS,GAA7C,mBAAKxE,EAAL,KAAkBwH,EAAlB,KAEMf,EAAU,SAACP,GAEf,GADAqB,EAAUD,GAAYA,GACnBpB,EAAW,CACZ,IAAMuB,EAAU,CACdlC,GAAImC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GACzClD,KAAMuB,EACNhB,UAAU,GAEZiC,EAAS,GAAD,mBAAKD,GAAL,CAAYO,KACpBJ,EAAiB,GAAD,mBAAKH,GAAL,CAAYO,KAC5BT,aAAac,QAAQ,QAAShB,KAAKiB,UAAL,sBAAmBb,GAAnB,CAA0BO,MACxDD,GAAgBxH,KAIduE,EAAW,SAACgB,EAAIW,GACpB,GAAGA,EAAW,CACZ,IAAM8B,EAAQ,YACXd,EAAMe,KAAI,SAAC7D,GAAD,OAAUA,EAAKmB,KAAOA,EAAZ,2BAAsBnB,GAAtB,IAA4BO,KAAMuB,IAAlC,eAAmD9B,OAE1E+C,EAASa,GACTX,EAAiBW,GACjBhB,aAAac,QAAQ,QAAShB,KAAKiB,UAAUC,IAC7CR,GAAgBxH,KAQd0G,EAAa,WACjBa,EAAUD,GAAYA,IAGlBhD,EAAa,SAACiB,GAClB,IAAM2C,EAAa,YAAOhB,EAAMiB,QAAO,SAAC/D,GAAD,OAAUA,EAAKmB,KAAOA,MAC7D4B,EAASe,GACTb,EAAiBa,GACjBlB,aAAac,QAAQ,QAAShB,KAAKiB,UAAUG,KAGzCE,EAAe,SAAC7C,GACpB,IAAMyC,EAAQ,YACTd,EAAMe,KAAI,SAAC7D,GAAD,OAAUA,EAAKmB,KAAOA,EAAZ,2BAAsBnB,GAAtB,IAA4Bc,UAAWd,EAAKc,WAA5C,eAA4Dd,OAErF+C,EAASa,GAET,IAAMK,EAAgB,YACjBjB,EAAca,KAAI,SAAC7D,GAAD,OAAUA,EAAKmB,KAAOA,EAAZ,2BAAsBnB,GAAtB,IAA4Bc,UAAWd,EAAKc,WAA5C,eAA4Dd,OAE7FiD,EAAiBgB,GACjBrB,aAAac,QAAQ,QAAShB,KAAKiB,UAAUC,KAazCM,EAAW,WACf,OAAIhB,EAeA,cAAC,EAAD,CACEb,QAASA,EACTC,WAAYA,IAfd,qBAAK5D,UAAU,gBAAf,SACA,cAACyF,EAAA,EAAD,CACErF,QAAQ,YACRb,MAAM,UACN8D,KAAK,SACLf,QAAS,WACPmC,EAAUD,GAAYA,IAL1B,sGAyBN,OACE,sBAAKxE,UAAU,MAAf,UACE,cAAC,EAAD,CACE/C,YA1Cc,SAACyI,GACnB,IAAMC,EAAiBD,EAAMpC,OAAO9F,MAAM2F,OAC1CmB,EAAa,YACRF,EAAMiB,QAAO,SAAC/D,GAAD,OACdA,EAAKO,KAAKC,YAAY8D,SAASD,IAAmBrE,EAAKO,KAAKG,UAAU4D,SAASD,OAGnFpB,EAAiBD,IAoCbpH,YAAaA,EACbC,qBAxEuB,WAC3BuH,GAAe,MAyEb,cAACc,EAAD,IACA,cAAC,gBAAD,CACEK,KAAMvB,EACNwB,QAASvB,EACTwB,UAAW,IACX/F,UAAU,cACVgG,iBAAe,EACfX,OAAO,mBACPY,MAAO,WApBI,IAAAf,EACfX,EADeW,EAqBAZ,GAnBfJ,aAAac,QAAQ,QAAShB,KAAKiB,UAAUC,KAW3C,SAWGZ,EAAca,KAAI,SAAC7D,GAClB,OACA,cAAC,EAAD,CACIA,KAAMA,EAENC,WAAY+D,EACZ9D,WAAYA,EACZC,SAAUA,GAHLH,EAAKmB,a,MChIxByD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d3b0fdf6.chunk.js","sourcesContent":["import { AppBar, Toolbar } from '@material-ui/core';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport React, { useEffect, useRef  } from 'react';\r\n\r\nfunction HeaderBar({ searchItems, resetSearch, resetIntoFalseSearch }) {\r\n  let textInput = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if(resetSearch) {\r\n      textInput.current.value = \"\";\r\n      resetIntoFalseSearch();\r\n    }\r\n  })\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n      fontWeight: 'bold',\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar \r\n        position=\"static\"\r\n        className=\"app-bar\"\r\n      >\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Item List App\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              onChange={searchItems}\r\n              placeholder=\"Поиск\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              inputRef={textInput}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div style={{color: '#3f51b5'}}>Саня, хуй сосал?</div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderBar;","import React, { useState } from 'react';\r\nimport { IconButton, Slide, Dialog, InputBase, TextareaAutosize, DialogContent } from '@material-ui/core';\r\nimport { DeleteForever, Done, RemoveCircleOutline, Cancel, Save } from '@material-ui/icons';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction ToDo({ todo, toggleTask, removeTask, editTask }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [headerInput, setHeaderInput] = useState(todo.task.headerInput);\r\n  const [bodyInput, setBodyInput] = useState(todo.task.bodyInput);\r\n\r\n  const handleHeaderInputChange = (e) => {\r\n    setHeaderInput(e.target.value); \r\n  }\r\n\r\n  const handleBodyInputChange = (e) => {\r\n    setBodyInput(e.target.value);\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const RenderCompleteButton = ({ complete }) => {\r\n    return(\r\n      <IconButton \r\n        className={\r\n          todo.complete ? \r\n          \"item-todo__icon-button item-todo__delete ignore-elements\" : \r\n          \"item-todo__icon-button item-todo__done ignore-elements\"\r\n        }\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          toggleTask(todo.id);\r\n        }}\r\n      >\r\n      {complete ? (\r\n        <RemoveCircleOutline className=\"item-todo__icon\"/>\r\n      ) : (\r\n        <Done className=\"item-todo__icon\"/>\r\n      )}\r\n      </IconButton>\r\n    );\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(headerInput.trim() !== '' || bodyInput.trim() !== '') {\r\n      const userInput = {headerInput, bodyInput}\r\n      editTask(todo.id, userInput)\r\n      handleClose();\r\n    }\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div \r\n        className={todo.complete ? \"item-todo item-todo__complete\" : \"item-todo\"}\r\n        onClick={handleClickOpen}\r\n        >\r\n        <div className=\"item-todo__header\">\r\n          {todo.task.headerInput}\r\n        </div>\r\n        <div className=\"item-todo__body\">\r\n          {todo.task.bodyInput}\r\n        </div>\r\n        <div className=\"item-todo__tools\">\r\n          <IconButton \r\n            className=\"item-todo__delete\"\r\n            onClick={() => removeTask(todo.id)}\r\n          >\r\n            <DeleteForever className=\"item-todo__icon\"/>\r\n          </IconButton>\r\n          <RenderCompleteButton onClick={(e) => e.preventDefault()} complete={todo.complete}/>\r\n        </div>\r\n      </div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogContent>\r\n          <form \r\n            onSubmit={handleSubmit}\r\n            className=\"dialog-form\"\r\n          >\r\n            <div className=\"dialog-form__textblock\">\r\n              <InputBase \r\n                value={headerInput}\r\n                type=\"text\"\r\n                onChange={handleHeaderInputChange}\r\n                placeholder=\"Введите заголовок\"\r\n                className=\"dialog-form__input\"\r\n\r\n              />  \r\n\r\n              <TextareaAutosize  \r\n                className=\"dialog-form__textarea\"\r\n                onChange={handleBodyInputChange}\r\n                value={bodyInput}\r\n                type=\"text\"\r\n                placeholder=\"Заметка...\"\r\n              />   \r\n\r\n              <div className=\"dialog-form__tools\">\r\n              <IconButton \r\n                onClick={handleClose}\r\n                variant=\"contained\" \r\n                type=\"button\">\r\n                <Cancel className=\"dialog-form__cancel\"/>\r\n              </IconButton>\r\n\r\n              <IconButton \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                type=\"submit\">\r\n                <Save/>\r\n              </IconButton>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDo;","import { TextareaAutosize, InputBase, IconButton  } from '@material-ui/core';\r\nimport { React, useState } from 'react';\r\nimport { Save, Cancel } from '@material-ui/icons';\r\n\r\n\r\n\r\nfunction ToDoForm({ addTask, toggleForm }) {\r\n  const [headerInput, setHeaderInput] = useState('');\r\n  const [bodyInput, setBodyInput] = useState('');\r\n\r\n  const handleHeaderInputChange = (e) => {\r\n    setHeaderInput(e.currentTarget.value); \r\n  }\r\n\r\n  const handleBodyInputChange = (e) => {\r\n    setBodyInput(e.currentTarget.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const a = {headerInput, bodyInput}\r\n    if(headerInput.trim() !== \"\" || bodyInput.trim() !== \"\") {\r\n      addTask(a);\r\n      setHeaderInput(\"\");\r\n      setBodyInput(\"\");\r\n    }\r\n}\r\n\r\n  return (\r\n    <form \r\n      onSubmit={handleSubmit}\r\n      className=\"todo-form\"\r\n    >\r\n      <div className=\"todo-form__textblock\">\r\n        <InputBase \r\n          value={headerInput}\r\n          type=\"text\"\r\n          onChange={handleHeaderInputChange}\r\n          placeholder=\"Введите заголовок\"\r\n          className=\"todo-form__input\"\r\n        />  \r\n\r\n        <TextareaAutosize  \r\n          className=\"todo-form__textarea\"\r\n          onChange={handleBodyInputChange}\r\n          value={bodyInput}\r\n          type=\"text\"\r\n          placeholder=\"Заметка...\"\r\n        />   \r\n\r\n        <div className=\"todo-form__tools\">\r\n        <IconButton \r\n          onClick={toggleForm}\r\n          variant=\"contained\" \r\n          type=\"button\">\r\n          <Cancel className=\"todo-form__cancel\"/>\r\n        </IconButton>\r\n\r\n        <IconButton \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          type=\"submit\">\r\n          <Save/>\r\n        </IconButton>\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ToDoForm;","import { Button } from '@material-ui/core';\r\nimport React, { useState, useEffect  } from 'react';\r\n\r\nimport HeaderBar from './HeaderBar';\r\nimport ToDo from './ToDo';\r\nimport ToDoForm from './ToDoForm';\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem('todos')) ? JSON.parse(localStorage.getItem('todos')) : []);\r\n  let [searchedTodos, setSearchedTodos] = useState(todos ? todos : []);\r\n  let [isTapped, setTapped] = useState(false);\r\n  let [resetSearch, setResetSearch] = useState(false);\r\n\r\n  const addTask = (userInput) => {\r\n    setTapped(isTapped = !isTapped);\r\n    if(userInput) {\r\n      const newItem = {\r\n        id: Math.random().toString(36).substr(2, 9),\r\n        task: userInput,\r\n        complete: false,\r\n      }\r\n      setTodos([...todos, newItem]);\r\n      setSearchedTodos([...todos, newItem]);\r\n      localStorage.setItem('todos', JSON.stringify([...todos, newItem]));\r\n      setResetSearch(!resetSearch);\r\n    }\r\n  }\r\n\r\n  const editTask = (id, userInput) => {\r\n    if(userInput) {\r\n      const newTodos = [\r\n      ...todos.map((todo) => todo.id === id ? { ...todo, task: userInput} : {...todo })\r\n      ];\r\n      setTodos(newTodos);\r\n      setSearchedTodos(newTodos);\r\n      localStorage.setItem('todos', JSON.stringify(newTodos));\r\n      setResetSearch(!resetSearch);\r\n    }\r\n  }\r\n\r\n  const resetIntoFalseSearch = () => {\r\n    setResetSearch(false);\r\n  }\r\n\r\n  const toggleForm = () => {\r\n    setTapped(isTapped = !isTapped);\r\n  }\r\n\r\n  const removeTask = (id) => {\r\n    const filteredTodos = [...todos.filter((todo) => todo.id !== id)];\r\n    setTodos(filteredTodos);\r\n    setSearchedTodos(filteredTodos);\r\n    localStorage.setItem('todos', JSON.stringify(filteredTodos));\r\n  }\r\n\r\n  const handleToggle = (id) => {\r\n    const newTodos = [\r\n      ...todos.map((todo) => todo.id === id ? { ...todo, complete: !todo.complete} : {...todo })\r\n    ];\r\n    setTodos(newTodos);\r\n\r\n    const newSearchedTodos = [\r\n      ...searchedTodos.map((todo) => todo.id === id ? { ...todo, complete: !todo.complete} : {...todo })\r\n    ];\r\n    setSearchedTodos(newSearchedTodos);\r\n    localStorage.setItem('todos', JSON.stringify(newTodos));\r\n  }\r\n\r\n  const searchItems = (event) => {\r\n    const stringToSearch = event.target.value.trim();\r\n    searchedTodos = [\r\n      ...todos.filter((todo) =>\r\n        todo.task.headerInput.includes(stringToSearch) || todo.task.bodyInput.includes(stringToSearch)\r\n      )\r\n    ]\r\n    setSearchedTodos(searchedTodos);\r\n  }\r\n\r\n  const Creation = () => {\r\n    if(!isTapped) {\r\n      return (\r\n        <div className=\"create-button\">\r\n        <Button\r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          type=\"submit\"\r\n          onClick={() => {\r\n            setTapped(isTapped = !isTapped);\r\n          }}\r\n        >Создать заметку</Button>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <ToDoForm \r\n          addTask={addTask}  \r\n          toggleForm={toggleForm}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  const moveTodo = newTodos => {\r\n    setSearchedTodos(newTodos);\r\n    localStorage.setItem('todos', JSON.stringify(newTodos));\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <HeaderBar  \r\n        searchItems={searchItems}\r\n        resetSearch={resetSearch}\r\n        resetIntoFalseSearch={resetIntoFalseSearch}\r\n      />\r\n      <Creation />\r\n      <ReactSortable \r\n        list={searchedTodos} \r\n        setList={setSearchedTodos}\r\n        animation={250}\r\n        className=\"sorted-list\"\r\n        preventOnFilter\r\n        filter=\".ignore-elements\"\r\n        onEnd={() => { \r\n          moveTodo(searchedTodos); \r\n        }}\r\n        >\r\n        {searchedTodos.map((todo) => {\r\n          return(\r\n          <ToDo\r\n              todo={todo}\r\n              key={todo.id}\r\n              toggleTask={handleToggle}\r\n              removeTask={removeTask}\r\n              editTask={editTask}\r\n          />\r\n          )\r\n        })}\r\n      </ReactSortable>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}